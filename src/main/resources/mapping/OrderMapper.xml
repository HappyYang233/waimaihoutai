<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootmybatis.mapper.OrderMapper">
    <resultMap id="test" type="com.example.springbootmybatis.entity.Order">
        <id column="id" property="id" />
        <result column="addTime" property="addTime" jdbcType="DATE"/>

    </resultMap>
    <resultMap id="test2" type="com.example.springbootmybatis.entity.OrderVo">
        <id column="id" property="id" />
        <result column="addTime" property="addTime" jdbcType="DATE"/>
        <result column="resId" property="resId"/>
        <result column="totalMoney" property="totalMoney"/>
        <result column="payMoney" property="payMoney"/>
        <result column="address" property="address"/>
        <result column="num" property="num"/>
        <result column="status" property="status"/>
        <result column="getName" property="getName"/>
        <result column="getMobile" property="getMobile"/>
        <result column="openId" property="openId"/>
        <result column="foodImageUrl" property="foodImageUrl"/>
        <result column="foodType" property="foodType"/>
        <collection property="list" ofType="OrderDetail">
            <id column="aid" property="id"/>
            <result column="aoid" property="orderId"/>
            <result column="afid" property="foodId"/>
            <result column="anum" property="num"/>
            <result column="afn" property="foodName"/>
        </collection>
    </resultMap>
    <select id="findOrderAndOrderDetail" resultMap="test2">
    select o.* ,a.id as aid ,a.orderId as  aoid,a.foodId as afid,a.num as anum,a.foodName as afn
     from (select * from `order` where resId =#{resId})o left outer join orderdetail a on o.id=a.orderId order by addTime desc
    </select>
    <select id="findOrderByDate" resultMap="test2">
        select o.* ,a.id as aid ,a.orderId as  aoid,a.foodId as afid,a.num as anum,a.foodName as afn
        from (select * from `order` where resId =#{resId} and addTime=#{date} and foodType=#{foodType})o left outer join orderdetail a on o.id=a.orderId order by num
    </select>
    <select id="getOneDayMoney"  resultType="java.math.BigDecimal">
        select sum(totalMoney) from `order` where resId=#{resId} and addTime=#{time}
    </select>
    <select id="getAllMoney" resultType="java.math.BigDecimal">
        select sum(totalMoney) from `order` where resId=#{resId}
    </select>
    <select id="countAddress" resultType="java.util.Map">
        select address, count(*)as num from `order` where resId=#{resId} group by address
    </select>
    <select id="countSales" resultType="java.util.Map">
        select addTime,count(*)as num from `order` where resId=1  and date_sub(CURDATE(),INTERVAL 7 DAY) &lt;= DATE(addTime)GROUP BY addTime
    </select>
    <insert id="pay"
            useGeneratedKeys="true"
            keyProperty="id"
            keyColumn="id"
            parameterType="com.example.springbootmybatis.entity.Order"
    >
        insert  into `order` (openId,resId,totalMoney,payMoney,address,getName,getMobile,num,status,addTime,foodImageUrl,foodType)
        values (
                #{openId},
                #{resId},
                #{totalMoney},
                #{payMoney},
                #{address},
                #{getName},
                #{getMobile},
                #{num},
                #{status},
                #{addTime},
                #{foodImageUrl},
                #{foodType}
                )
    </insert>
    <select id="findAll"  resultType="com.example.springbootmybatis.entity.Order" resultMap="test">
       select * from `order`  where openId=#{openId};
    </select>
    <update id="updateStatus" >
        update `order` set status =#{status} where id = #{id}
    </update>
    <select id="checkStatus" resultType="com.example.springbootmybatis.entity.Order">
        select * from `order` where id=#{id}
    </select>
    <select id="findFoodByFoodIdArray"  parameterType="java.util.List" resultType="com.example.springbootmybatis.entity.Food">
        select  * from food where food.id in
        <foreach collection="array" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <update id="setOrderFinish" >
        update `order` set status=1 where status=0
    </update>
    <delete id="removeOrder">
        delete from `order` where id=#{id}
    </delete>
</mapper>
